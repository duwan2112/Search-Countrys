{"version":3,"sources":["components/country.js","components/CountryList.js","components/Search.js","components/ModeDark.js","components/Navbar.js","components/CountryPage.js","WrapperApp.js","App.js","index.js"],"names":["CountryStyled","styled","div","props","mode","CountryStyledMax","Country","history","useHistory","dispatch","useDispatch","useSelector","state","onClick","type","payload","push","name","loading","src","flag","alt","className","population","region","capital","CountryListStyled","CountryList","countryListName","length","countryListRegion","countryList","useEffect","fetch","then","respuesta","json","resultado","map","key","SearchStyled","Search","countryname","obtenerRef","React","createRef","onKeyUp","current","value","ref","defaultValue","placeholder","onChange","event","target","ModeDarkStyled","ModeDark","trans","transform","NavbarStyled","Navbar","to","CountryPageStyle","CountryPage","find","item","alpha2Code","match","params","id","useState","country","setCountry","response","data","subregion","AppWrapperStyled","WrapperApp","path","component","store","createStore","action","filter","toLowerCase","includes","lenght","countryClick","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb2ee938.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CountryStyled = styled.div`\r\nbackground: ${(props)=> props.mode === \"true\" ? \"transparent\" : \"rgba(255,255,255,.2)\"    };\r\nwidth: 300px;\r\nmargin: 15px;\r\nmin-height: 350px;\r\nbox-shadow: ${(props)=> props.mode === \"true\" ? \"0px 0px 5px black\" : \"0px 0px 10px  rgba(255,255,255,.8)\"    };\r\nborder-radius: 5px;\r\noverflow: hidden;\r\npadding-bottom: 10px;\r\nfont-family: 'Nunito Sans', sans-serif;\r\ncursor: pointer;\r\n.details{  \r\n   padding-left: 15px;\r\n  text-align: left;\r\n   p{\r\n      margin: 0;\r\n   } \r\n}\r\nimg{\r\n    padding-top: 5px;\r\n    margin: 5px;\r\n    width: 90%;\r\n    height: 40%;\r\n    border-radius: 10px;\r\n}\r\n\r\n\r\n`\r\n\r\nexport const CountryStyledMax = styled(CountryStyled)`\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\n@media screen and (min-width: 1024px){\r\n   width: 100%;\r\n   img{ \r\n      opacity:  ${(props)=> props.mode === \"true\" ? \"1\" : \".7\"    };\r\n      width: 50%;\r\n       margin-left: 20px;\r\n      }\r\n  .details{\r\n    width: 50%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    font-size: 30px;\r\n  }\r\n} \r\n     @media screen and (max-width: 1024px)\r\n     {\r\n       width: 70%;\r\n       flex-direction: column;\r\n       .details{\r\n         width: 90%;\r\n         display: flex; \r\n         flex-direction: column;\r\n         text-align: left;\r\n       }\r\n\r\n     }\r\n        `\r\n\r\n\r\n\r\nexport default function Country(props) {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n function handleClick()  {\r\n   dispatch({\r\n     type: \"SET_COUNTRY_CLICK\",\r\n     payload: props\r\n\r\n   })\r\n   history.push(`/country/${props.name}`)\r\n }\r\n\r\n  const mode = useSelector((state)=> state.mode)\r\n\r\n    return (\r\n        <CountryStyled  onClick={handleClick}  mode={mode} >\r\n            <img loading=\"lazy\" src={props.flag} alt=\"bandera\"/>\r\n            <div className=\"details\"> \r\n            <h2>{props.name}</h2>\r\n             <p> <strong>Population:</strong>  {props.population} </p>\r\n             <p> <strong>Region:</strong>  {props.region} </p>\r\n             <p> <strong>Capital:</strong>  {props.capital} </p>\r\n             </div>\r\n        </CountryStyled>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React ,{ useEffect } from 'react'\r\nimport Country from './country'\r\nimport styled from 'styled-components'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\n\r\nconst CountryListStyled = styled.div`\r\n height: 100%;\r\n display: flex;\r\nflex-direction: row;\r\nflex-wrap: wrap;\r\njustify-content: center;\r\nalign-items: center;\r\n text-align: center;\r\n padding: 100px; \r\n@media screen and (max-width: 768px)\r\n{\r\n   padding: 20px;\r\n}\r\n`\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function CountryList() {\r\nconst dispatch = useDispatch()\r\nconst state = useSelector((state) => {\r\n  if( state.countryListName.length >0){\r\n    return state.countryListName\r\n  }\r\n  else if (state.countryListRegion.length > 0){\r\n    return state.countryListRegion\r\n  }\r\n  return state.countryList\r\n} )\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n\r\n  fetch(\"https://restcountries.eu/rest/v2/all\")\r\n  .then(respuesta => respuesta.json())\r\n  .then(resultado => dispatch({\r\n    type: \"SET_COUNTRY_LIST\",\r\n    payload: resultado\r\n  }))\r\n},[dispatch]);\r\n\r\n\r\n  return (\r\n   \r\n    <CountryListStyled >\r\n      { state.map((state) => {return <Country \r\n       key={state.name} \r\n       flag={state.flag}\r\n       name={state.name}\r\n       population={state.population}\r\n       region={state.region}\r\n       capital={state.capital} />}) }\r\n    </CountryListStyled>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst SearchStyled = styled.div`\r\npadding-top: 30px;\r\nwidth: 100%;\r\nheight: 20%;\r\nposition: relative;\r\nz-index: 0;\r\ntransition: 1s all;\r\ninput{\r\n    background: ${(props)=> props.mode === \"true\" ? \"rgba(0,0,0,.01)\" : \"rgba(255,255,255,.1)\"    };\r\n    color: ${(props)=> props.mode === \"true\" ? \"rgba(0,0,0,.7)\" : \"rgba(255,255,255,.3)\"    };\r\n    width: 60vw;\r\n    height: 40px;\r\n    box-shadow: inset 0px 0px 5px  black;\r\n    border-radius: 5px;\r\n    border: none;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n    padding-left: 10px;\r\n    font-size: 15px;\r\n    &:focus{\r\n        outline: 0px;\r\n    }\r\n}\r\nselect {\r\n    background: ${(props)=> props.mode === \"true\" ? \"rgba(0,0,0,.01)\" : \"rgba(255,255,255,.1)\"    };\r\n   \r\n   padding: 0px 10px;\r\n   color: ${(props)=> props.mode === \"true\" ? \"rgba(0,0,0,.7)\" : \"rgba(255,255,255,.3)\"    };\r\n    width: 50vw;\r\n    height: 30px;\r\n    border: none;\r\n    box-shadow: inset 0px 0px 5px  black;\r\n    \r\n    border-radius: 5px;\r\n    &:focus{\r\n        background: ${(props)=> props.mode === \"true\" ? \"rgba(0,0,0,.01)\" : \"rgba(255,255,255,.1)\"    };\r\n        color: black;\r\n        outline: none;\r\n    }\r\n}\r\n@media screen and (max-width: 768px)\r\n{\r\n    transition: 0s all; \r\n}\r\n\r\n`\r\n\r\nexport default function Search() {\r\n\r\n\r\n    const mode = useSelector((state)=> state.mode)\r\n    let countryname= useSelector((state)=> state.countryname)\r\n const dispatch = useDispatch()\r\n\r\nvar obtenerRef= React.createRef();\r\nfunction active (){\r\n    dispatch({\r\n        type: 'SET_COUNTRY_BY_NAME',\r\n        payload: obtenerRef.current.value\r\n    \r\n    })\r\n\r\n    countryname = obtenerRef.current.value\r\n \r\n}\r\nfunction activation(event){\r\n    dispatch({\r\n        type: 'SET_COUNTRY_BY_REGION',\r\n        payload: event.target.value\r\n    \r\n    })\r\n\r\n }\r\n    return (\r\n        <SearchStyled mode={mode}>\r\n            <input onKeyUp={active} ref={obtenerRef} type=\"text\"  defaultValue={countryname} placeholder=\"Busca un pais...\"/> \r\n            <br/> \r\n            <select onChange={activation} name=\"region\"> \r\n            <option value=\"Elige\"> Elige una opcion</option>\r\n            <option value=\"America\"> America </option> \r\n            <option value=\"Asia\">  Asia</option> \r\n            <option value=\"Europe\"> Europe </option>\r\n             <option value=\"Africa\"> Africa </option>\r\n             <option value=\"Oceania\"> Oceania </option> \r\n            </select> \r\n           \r\n        </SearchStyled>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\nconst ModeDarkStyled= styled.div`\r\n\r\nheight: auto; \r\nbutton{\r\n    padding: 10px;\r\n    background: transparent;\r\n    border-radius: 50%;\r\n    color: ${(props)=> props.mode !== \"true\" ? \"#fafafa\" : \"black\" };\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 30px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    &:hover{\r\n        background: ${(props)=> props.mode === \"true\" ? \"#161515\" : \"white\" };\r\n        color: ${(props)=> props.mode === \"true\" ? \"white\" : \"black\" };\r\n     \r\n    }\r\n    &:active{\r\n        transform: scale(0.9)\r\n    }\r\n    &:focus {\r\n        outline: none;\r\n        \r\n    }\r\n    &::selection{\r\n        background: transparent;\r\n    }\r\n\r\n}\r\n`\r\n\r\nexport default function ModeDark() {\r\n \r\n const dispatch = useDispatch()\r\n  const trans = useSelector((state) => {return state.mode});\r\n\r\n\r\n\r\nfunction transform(){\r\n\r\ndispatch({\r\n    type: \"SET_MODE\",\r\n    payload: (trans === \"true\" ? \"false\" : \"true\")\r\n})\r\n}\r\n\r\n\r\n    return (\r\n        <ModeDarkStyled mode={trans}>\r\n\r\n            {\r\n            \r\n            trans === \"true\" ?  <button onClick={transform}> <i className=\"fas fa-moon\"></i>  </button> :  <button onClick={transform}><i className=\"fas fa-sun\"></i></button> \r\n            \r\n            }\r\n     \r\n             \r\n        </ModeDarkStyled>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ModeDark from './ModeDark'\r\nimport {useSelector} from 'react-redux'\r\nimport { Link} from 'react-router-dom'\r\nconst NavbarStyled = styled.div`\r\n\r\nheight: 20%;\r\ntransition: 1s all;\r\nbackground: white;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 20px;\r\n\r\nbackground: ${(props)=> props.mode === \"true\" ? \"white\" : \"#161515\"    };\r\nbox-shadow: ${(props)=> props.mode === \"true\" ? \"0px 0px 5px black\" : \"0px 0px 5px white\"    };\r\nposition: relative; \r\nz-index: 1;\r\na{\r\n    text-decoration: none;\r\n    color: ${(props)=> props.mode !== \"true\" ? \"#fafafa\" : \"black\"  };\r\n}\r\nh2{\r\n    text-transform: uppercase;\r\n    letter-spacing: -2px;\r\n    text-shadow: 1px 1px 10px   black;\r\n}\r\n@media screen and (max-width: 768px)\r\n{\r\n    transition: 0s all; \r\n}\r\n`\r\n\r\n\r\n\r\n\r\nexport default function Navbar() {\r\n   \r\n    const mode = useSelector((state)=> state.mode)\r\n    \r\n    return (\r\n      \r\n        <NavbarStyled mode={mode}>\r\n              <Link to=\"/\"> <h2>This is a world</h2> </Link> \r\n           \r\n            <ModeDark/> \r\n        </NavbarStyled>\r\n    )\r\n}\r\n","import React ,{useState,useEffect} from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport { CountryStyledMax} from './country'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\nconst CountryPageStyle = styled.div`\r\n height: 100%;\r\n display: flex;\r\nflex-direction: row;\r\nflex-wrap: wrap;\r\njustify-content: center;\r\nalign-items: center;\r\n text-align: center;\r\n padding: 50px; \r\n@media screen and (max-width: 768px)\r\n{\r\n   padding: 20px;\r\n}\r\n`\r\n\r\n\r\n\r\n\r\n\r\nexport default function CountryPage(props) {\r\n    \r\n\r\n  const mode= useSelector(state => state.mode)\r\n  let countryList = useSelector(state => state.countryList.find(item => item.alpha2Code === props.match.params.id))\r\n\r\n  const [country,setCountry] = useState(countryList)\r\n useEffect(()=>{\r\n\r\n     \r\n   if(!country){\r\n       \r\n    fetch(`https://restcountries.eu/rest/v2/name/${props.match.params.id}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setCountry(data)\r\n    })\r\n  \r\n   }\r\n },[country,props.match.params.id])\r\n\r\n\r\n    return (\r\n        <CountryPageStyle>\r\n        {country ? country.map((country)=> { \r\n             \r\n                return <CountryStyledMax key={country.name} mode={mode} >\r\n          <img loading=\"lazy\" src={country.flag} alt=\"bandera\"/>\r\n       <div className=\"details\"> \r\n       <h2>{country.name}</h2>\r\n        <p> <strong>Population:</strong>  {country.population} </p>\r\n        <p> <strong>Region:</strong>  {country.region} </p>\r\n        <p> <strong>Capital:</strong>  {country.capital} </p>\r\n        <p> <strong>SubRegion:</strong>  {country.subregion} </p>\r\n        </div></CountryStyledMax> \r\n\r\n       \r\n         }) : <> </> } \r\n \r\n        </CountryPageStyle>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CountryList from './components/CountryList'\r\nimport Search from './components/Search'\r\nimport Navbar from './components/Navbar'\r\nimport CountryPage from './components/CountryPage'\r\nimport {useSelector} from 'react-redux'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nconst AppWrapperStyled = styled.div`\r\n\r\nbox-sizing: border-box;\r\ntext-align: center;\r\nmin-height: 100vh;\r\ntransition: 1s all;\r\nbackground: ${(props)=> props.mode === \"true\" ? \"#fafafa\" : \"#161615\"    };\r\n@media screen and (max-width: 768px)\r\n{\r\n    transition: 0s all; \r\n}\r\n`\r\n\r\n\r\n\r\n\r\n\r\nexport default function WrapperApp() {\r\n  const mode = useSelector((state)=> state.mode )  \r\n    return (\r\n        <>\r\n          <Router>  \r\n       <AppWrapperStyled mode={mode}>         \r\n        <Navbar />\r\n          <Switch> \r\n            \r\n             <Route path=\"/country/:id\" component={CountryPage}/>  \r\n   <Route  path=\"/\"> \r\n           \r\n           <Search /> \r\n          <CountryList/>\r\n          </Route>\r\n           </Switch>\r\n      </AppWrapperStyled>\r\n      </Router>  \r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\nimport WrapperApp from './WrapperApp'\nimport {Provider } from 'react-redux'\nimport {createStore} from 'redux'\n\n\nconst initialState = { countryList: [],countryListName: [],countryListRegion: [],mode: \"true\",countryClick: [],countryname: \"\"}\n\n \nfunction reducer(state,action) {\n \n  switch(action.type)\n  {\n    case 'SET_COUNTRY_LIST': \n    {\n      \n      return {...state , countryList: action.payload}\n    }\n    case 'SET_COUNTRY_BY_NAME':{\n       const countryname= action.payload\n      if (action.payload.length > 0 ){\n        const countryListName = state.countryList.filter((country)=>{ return   country.name.toLowerCase().includes(action.payload.toLowerCase())  })\n        return{...state, countryListName,countryname }\n\n      }\n      \n      return {...state, countryListName: [],countryname: ''}\n    }\n    case 'SET_COUNTRY_BY_REGION':{\n\n        \n      if (action.payload !== '...' ){\n       const countryListRegion = state.countryList.filter((country)=> country.region.toLowerCase().includes(action.payload.toLowerCase()) )\n\n        return{...state, countryListRegion  }\n      }\n      return {...state, countryListRegion: []}\n    }\n\n    case 'SET_MODE' : {\n\n       return {...state, mode: action.payload}\n    }\n\n\n    case 'SET_COUNTRY_CLICK': {\n      if(action.payload.lenght > 0)\n      {\n         return {...state, countryClick: action.payload}\n      }\n      return {...state, countryClick: []}\n    }\n\n\n\n    default: return state\n  }\n  \n  \n}\n\nconst store = createStore(reducer, initialState);\n\n\nexport default class App extends Component {\n\n\n  render() {\n    return (\n\n       <Provider  store={store}>\n          <WrapperApp/>\n\n        \n         \n      </Provider> \n    )\n  }\n}\n\n\n\n\n\n\n\n\n/* import React from 'react';\nimport styled from 'styled-components'\nimport CountryList from './components/CountryList'\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport Search from './components/Search'\n\n\n\n\nconst AppStyled = styled.div`\npadding-top: 20px;\ntext-align: center;\n`\n\n\nconst initialState = { countryList: [],countryListByName:[],countryListByRegion:[],countryListFilter:[],searchFilter: ''}\nfunction reducer(state,action){\n  switch(action.type)\n  {\n    case 'SET_COUNTRY_LIST':{\n       \nreturn {...state,countryList: action.payload}\n    }\n    case 'SET_COUNTRY_BY_NAME': {\n         const searchFilter = action.payload\n         if(searchFilter.length > 0){\n           const countrylistFilter = state.countryList.filter((country)=>{ return country.name.toLowerCase().includes(searchFilter.toLowerCase()) })\n           return {...state,countrylistFilter :[],searchFilter: ''}\n         }\n         return {...state,countrylistFilter: [],searchFilter: ''}\n    }\n   \n    default: {\n      return state\n    } \n  \n    \n  }\n  \n}\n\n\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n   <AppStyled>\n      <Search/> \n    <CountryList/> \n    </AppStyled> \n     </Provider>\n  );\n}\n\nexport default App;\n */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}